load_module "/usr/lib/nginx/modules/ndk_http_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_lua_module.so";

user  nginx;
worker_processes auto;
pid        /var/run/nginx.pid;

error_log  /var/log/nginx/error.log warn;

events {
    worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay on;
  keepalive_timeout  65;

  server {
    server_name localhost;

    listen 80;
    return 301 https://$host$request_uri;
  }

  server {

    server_name {{ HOSTNAME }};
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/letsencrypt/live/{{ HOSTNAME }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ HOSTNAME }}/privkey.pem;

    ssl_protocols       {{ SSL_PROTOCOLS }};
    {% if SSL_PROTOCOLS != 'TLSv1.3' %}
    ssl_ciphers         {{ SSL_CIPHERS }};
    {% endif %}
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:ssl_session_cache:10m;

    location / {
      default_type 'text/plain';
      content_by_lua_block {
        ngx.say("Thanks for connecting to {{ HOSTNAME }}");
        ngx.say("");
        ngx.say("       Client User Agent:  " .. ngx.var.http_user_agent);
        ngx.say("Client supported ciphers:  " .. ngx.var.ssl_ciphers);
        ngx.say("         Selected cipher:  " .. ngx.var.ssl_cipher);
      }
    }

  }
}
